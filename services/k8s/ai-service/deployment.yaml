apiVersion: v1
kind: Secret
metadata:
  name: ai-service-secrets
  namespace: santaclaude
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  openai-api-key: ""  # echo -n "your-key" | base64
  anthropic-api-key: ""  # echo -n "your-key" | base64

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-service-config
  namespace: santaclaude
data:
  DEBUG: "false"
  HOST: "0.0.0.0"
  PORT: "8001"
  DATABASE_URL: "sqlite:///./ai_service.db"
  REDIS_URL: "redis://redis:6379/0"
  CORS_ORIGINS: '["*"]'

---
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: santaclaude
  labels:
    app: ai-service
    tier: backend
    phase: phase-2
spec:
  selector:
    app: ai-service
  ports:
    - port: 8001
      targetPort: 8001
      name: http
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: santaclaude
  labels:
    app: ai-service
    tier: backend
    phase: phase-2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
        tier: backend
        phase: phase-2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8001"
    spec:
      containers:
      - name: ai-service
        image: santaclaude/ai-service:latest
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: ai-service-config
              key: DEBUG
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: ai-service-config
              key: HOST
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: ai-service-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: ai-service-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: ai-service-config
              key: REDIS_URL
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: anthropic-api-key
        volumeMounts:
        - name: ai-service-data
          mountPath: /app/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: ai-service-data
        persistentVolumeClaim:
          claimName: ai-service-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-service-pvc
  namespace: santaclaude
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-service-hpa
  namespace: santaclaude
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80